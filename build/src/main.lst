GAS LISTING /tmp/cc69Med2.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 54687265 		.string	"ThreadA created\n"
   9      61644120 
   9      63726561 
   9      7465640A 
   9      00
  10 0011 00000000 		.align	3
  10      000000
  11              	.LC1:
  12 0018 54687265 		.string	"ThreadB created\n"
  12      61644220 
  12      63726561 
  12      7465640A 
  12      00
  13 0029 00000000 		.align	3
  13      000000
  14              	.LC2:
  15 0030 54687265 		.string	"ThreadC created\n"
  15      61644320 
  15      63726561 
  15      7465640A 
  15      00
  16 0041 00000000 		.align	3
  16      000000
  17              	.LC3:
  18 0048 54687265 		.string	"ThreadD created\n"
  18      61644420 
  18      63726561 
  18      7465640A 
  18      00
  19 0059 00000000 		.align	3
  19      000000
  20              	.LC4:
  21 0060 74657374 		.string	"test"
  21      00
  22 0065 000000   		.align	3
  23              	.LC5:
  24 0068 46696E69 		.string	"Finished\n"
  24      73686564 
  24      0A00
  25              		.text
  26              		.align	2
  27              		.globl	main
  29              	main:
  30              	.LFB36:
  31              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** //
   2:src/main.cpp  **** // Created by marko on 20.4.22..
   3:src/main.cpp  **** //
   4:src/main.cpp  **** 
GAS LISTING /tmp/cc69Med2.s 			page 2


   5:src/main.cpp  **** #include "../h/tcb.hpp"
   6:src/main.cpp  **** #include "../h/workers.hpp"
   7:src/main.cpp  **** #include "../h/print.hpp"
   8:src/main.cpp  **** #include "../h/riscv.hpp"
   9:src/main.cpp  **** #include "../h/syscall_c.h"
  10:src/main.cpp  **** 
  11:src/main.cpp  **** int main()
  12:src/main.cpp  **** {
  32              		.loc 1 12 1
  33              		.cfi_startproc
  34 0000 130101FB 		addi	sp,sp,-80
  35              		.cfi_def_cfa_offset 80
  36 0004 23341104 		sd	ra,72(sp)
  37 0008 23308104 		sd	s0,64(sp)
  38 000c 233C9102 		sd	s1,56(sp)
  39 0010 23382103 		sd	s2,48(sp)
  40              		.cfi_offset 1, -8
  41              		.cfi_offset 8, -16
  42              		.cfi_offset 9, -24
  43              		.cfi_offset 18, -32
  44 0014 13040105 		addi	s0,sp,80
  45              		.cfi_def_cfa 8, 0
  13:src/main.cpp  ****     _thread *threads[5];
  46              		.loc 1 13 5
  14:src/main.cpp  **** 
  15:src/main.cpp  ****     threads[0] = _thread::createThread(nullptr);
  47              		.loc 1 15 5
  48              		.loc 1 15 39 is_stmt 0
  49 0018 13050000 		li	a0,0
  50 001c 97000000 		call	_ZN7_thread12createThreadEPFvvE@plt
  50      E7800000 
  51              	.LVL0:
  52              		.loc 1 15 16
  53 0024 233CA4FA 		sd	a0,-72(s0)
  16:src/main.cpp  ****     _thread::running = threads[0];
  54              		.loc 1 16 5 is_stmt 1
  55              		.loc 1 16 22 is_stmt 0
  56 0028 97070000 		la	a5,_ZN7_thread7runningE
  56      83B70700 
  57 0030 23B0A700 		sd	a0,0(a5)
  17:src/main.cpp  **** 
  18:src/main.cpp  ****     threads[1] = _thread::createThread(workerBodyA);
  58              		.loc 1 18 5 is_stmt 1
  59              		.loc 1 18 39 is_stmt 0
  60 0034 17050000 		la	a0,_Z11workerBodyAv
  60      03350500 
  61 003c 97000000 		call	_ZN7_thread12createThreadEPFvvE@plt
  61      E7800000 
  62              	.LVL1:
  63              		.loc 1 18 16
  64 0044 2330A4FC 		sd	a0,-64(s0)
  19:src/main.cpp  ****     printString("ThreadA created\n");
  65              		.loc 1 19 5 is_stmt 1
  66              		.loc 1 19 16 is_stmt 0
  67 0048 17050000 		lla	a0,.LC0
  67      13050500 
  68 0050 97000000 		call	_Z11printStringPKc@plt
GAS LISTING /tmp/cc69Med2.s 			page 3


  68      E7800000 
  69              	.LVL2:
  20:src/main.cpp  ****     threads[2] = _thread::createThread(workerBodyB);
  70              		.loc 1 20 5 is_stmt 1
  71              		.loc 1 20 39 is_stmt 0
  72 0058 17050000 		la	a0,_Z11workerBodyBv
  72      03350500 
  73 0060 97000000 		call	_ZN7_thread12createThreadEPFvvE@plt
  73      E7800000 
  74              	.LVL3:
  75              		.loc 1 20 16
  76 0068 2334A4FC 		sd	a0,-56(s0)
  21:src/main.cpp  ****     printString("ThreadB created\n");
  77              		.loc 1 21 5 is_stmt 1
  78              		.loc 1 21 16 is_stmt 0
  79 006c 17050000 		lla	a0,.LC1
  79      13050500 
  80 0074 97000000 		call	_Z11printStringPKc@plt
  80      E7800000 
  81              	.LVL4:
  22:src/main.cpp  ****     threads[3] = _thread::createThread(workerBodyC);
  82              		.loc 1 22 5 is_stmt 1
  83              		.loc 1 22 39 is_stmt 0
  84 007c 17050000 		la	a0,_Z11workerBodyCv
  84      03350500 
  85 0084 97000000 		call	_ZN7_thread12createThreadEPFvvE@plt
  85      E7800000 
  86              	.LVL5:
  87              		.loc 1 22 16
  88 008c 2338A4FC 		sd	a0,-48(s0)
  23:src/main.cpp  ****     printString("ThreadC created\n");
  89              		.loc 1 23 5 is_stmt 1
  90              		.loc 1 23 16 is_stmt 0
  91 0090 17050000 		lla	a0,.LC2
  91      13050500 
  92 0098 97000000 		call	_Z11printStringPKc@plt
  92      E7800000 
  93              	.LVL6:
  24:src/main.cpp  **** //    threads[4] = _thread::createThread(workerBodyD);
  25:src/main.cpp  **** //    printString("ThreadD created\n");
  26:src/main.cpp  **** 
  27:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
  94              		.loc 1 27 5 is_stmt 1
  95              		.loc 1 27 19 is_stmt 0
  96 00a0 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  96      83B70700 
  97              	.LVL7:
  98              	.LBB18:
  99              	.LBB19:
 100              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc69Med2.s 			page 4


   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
GAS LISTING /tmp/cc69Med2.s 			page 5


  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** private:
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // supervisor trap handler
  85:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** };
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  90:src/../h/riscv.hpp **** {
  91:src/../h/riscv.hpp ****     uint64 volatile scause;
  92:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  93:src/../h/riscv.hpp ****     return scause;
  94:src/../h/riscv.hpp **** }
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  97:src/../h/riscv.hpp **** {
  98:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  99:src/../h/riscv.hpp **** }
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 102:src/../h/riscv.hpp **** {
 103:src/../h/riscv.hpp ****     uint64 volatile sepc;
 104:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 105:src/../h/riscv.hpp ****     return sepc;
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 109:src/../h/riscv.hpp **** {
 110:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 111:src/../h/riscv.hpp **** }
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 114:src/../h/riscv.hpp **** {
 115:src/../h/riscv.hpp ****     uint64 volatile stvec;
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 117:src/../h/riscv.hpp ****     return stvec;
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 121:src/../h/riscv.hpp **** {
GAS LISTING /tmp/cc69Med2.s 			page 6


 122:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 101              		.loc 2 122 5 is_stmt 1
 102              		.loc 2 122 69 is_stmt 0
 103              	#APP
 104              	# 122 "src/../h/riscv.hpp" 1
 123              	}
 105              		csrw stvec, a5
 106              	# 0 "" 2
 107              	.LVL8:
 108              	#NO_APP
 109              	.LBE19:
 110              	.LBE18:
  28:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 111              		.loc 1 28 5 is_stmt 1
 112              	.LBB20:
 113              	.LBB21:
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     uint64 volatile stval;
 128:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 129:src/../h/riscv.hpp ****     return stval;
 130:src/../h/riscv.hpp **** }
 131:src/../h/riscv.hpp **** 
 132:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 133:src/../h/riscv.hpp **** {
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 138:src/../h/riscv.hpp **** {
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 148:src/../h/riscv.hpp **** {
 149:src/../h/riscv.hpp ****     uint64 volatile sip;
 150:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 151:src/../h/riscv.hpp ****     return sip;
 152:src/../h/riscv.hpp **** }
 153:src/../h/riscv.hpp **** 
 154:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 155:src/../h/riscv.hpp **** {
 156:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 157:src/../h/riscv.hpp **** }
 158:src/../h/riscv.hpp **** 
 159:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 160:src/../h/riscv.hpp **** {
 161:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 114              		.loc 2 161 5
 115              		.loc 2 161 68 is_stmt 0
 116 00ac 93072000 		li	a5,2
GAS LISTING /tmp/cc69Med2.s 			page 7


 117              	#APP
 118              	# 161 "src/../h/riscv.hpp" 1
 162              	}
 119              		csrs sstatus, a5
 120              	# 0 "" 2
 121              	.LVL9:
 122              	#NO_APP
 123              	.LBE21:
 124              	.LBE20:
  29:src/main.cpp  ****     int ret = thread_create(&threads[4], reinterpret_cast<void (*)(void *)>(workerBodyD), nullptr);
 125              		.loc 1 29 5 is_stmt 1
 126              		.loc 1 29 28 is_stmt 0
 127 00b4 13060000 		li	a2,0
 128 00b8 97050000 		la	a1,_Z11workerBodyDv
 128      83B50500 
 129 00c0 130584FD 		addi	a0,s0,-40
 130 00c4 97000000 		call	_Z13thread_createPP7_threadPFvPvES2_@plt
 130      E7800000 
 131              	.LVL10:
 132 00cc 93040500 		mv	s1,a0
 133              	.LVL11:
  30:src/main.cpp  ****     printString("ThreadD created\n");
 134              		.loc 1 30 5 is_stmt 1
 135              		.loc 1 30 16 is_stmt 0
 136 00d0 17050000 		lla	a0,.LC3
 136      13050500 
 137 00d8 97000000 		call	_Z11printStringPKc@plt
 137      E7800000 
 138              	.LVL12:
  31:src/main.cpp  ****     printInteger(ret);
 139              		.loc 1 31 5 is_stmt 1
 140              		.loc 1 31 17 is_stmt 0
 141 00e0 13850400 		mv	a0,s1
 142 00e4 97000000 		call	_Z12printIntegerm@plt
 142      E7800000 
 143              	.LVL13:
 144 00ec 6F00C000 		j	.L4
 145              	.L2:
  32:src/main.cpp  **** 
  33:src/main.cpp  ****     while (!(threads[1]->isFinished() &&
  34:src/main.cpp  ****              threads[2]->isFinished() &&
  35:src/main.cpp  ****              threads[3]->isFinished() &&
  36:src/main.cpp  ****              threads[4]->isFinished()))
  37:src/main.cpp  ****     {
  38:src/main.cpp  ****         _thread::yield();
 146              		.loc 1 38 9 is_stmt 1 discriminator 3
 147              		.loc 1 38 23 is_stmt 0 discriminator 3
 148 00f0 97000000 		call	_ZN7_thread5yieldEv@plt
 148      E7800000 
 149              	.LVL14:
 150              	.L4:
  33:src/main.cpp  ****              threads[2]->isFinished() &&
 151              		.loc 1 33 5 is_stmt 1
  33:src/main.cpp  ****              threads[2]->isFinished() &&
 152              		.loc 1 33 12
  33:src/main.cpp  ****              threads[2]->isFinished() &&
 153              		.loc 1 33 23 is_stmt 0
GAS LISTING /tmp/cc69Med2.s 			page 8


 154 00f8 833704FC 		ld	a5,-64(s0)
 155              	.LVL15:
 156              	.LBB22:
 157              	.LBB23:
 158              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "syscall_c.h"
   9:src/../h/tcb.hpp **** #include "../lib/hw.h"
  10:src/../h/tcb.hpp **** #include "scheduler.hpp"
  11:src/../h/tcb.hpp **** #include "../h/print.hpp"
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp **** // Thread Control Block
  14:src/../h/tcb.hpp **** class _thread
  15:src/../h/tcb.hpp **** {
  16:src/../h/tcb.hpp **** public:
  17:src/../h/tcb.hpp ****     ~_thread() { delete[] stack; }
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 159              		.loc 3 19 31 is_stmt 1
 160              		.loc 3 19 38 is_stmt 0
 161 00fc 83C78702 		lbu	a5,40(a5)
 162              	.LVL16:
 163              	.LBE23:
 164              	.LBE22:
  33:src/main.cpp  ****              threads[2]->isFinished() &&
 165              		.loc 1 33 12
 166 0100 E38807FE 		beqz	a5,.L2
  34:src/main.cpp  ****              threads[3]->isFinished() &&
 167              		.loc 1 34 23 discriminator 2
 168 0104 833784FC 		ld	a5,-56(s0)
 169              	.LVL17:
 170              	.LBB24:
 171              	.LBB25:
 172              		.loc 3 19 31 is_stmt 1 discriminator 2
 173              		.loc 3 19 38 is_stmt 0 discriminator 2
 174 0108 83C78702 		lbu	a5,40(a5)
 175              	.LVL18:
 176              	.LBE25:
 177              	.LBE24:
  33:src/main.cpp  ****              threads[2]->isFinished() &&
 178              		.loc 1 33 39 discriminator 2
 179 010c E38207FE 		beqz	a5,.L2
  35:src/main.cpp  ****              threads[4]->isFinished()))
 180              		.loc 1 35 23
 181 0110 833704FD 		ld	a5,-48(s0)
 182              	.LVL19:
 183              	.LBB26:
 184              	.LBB27:
 185              		.loc 3 19 31 is_stmt 1
 186              		.loc 3 19 38 is_stmt 0
 187 0114 83C78702 		lbu	a5,40(a5)
GAS LISTING /tmp/cc69Med2.s 			page 9


 188              	.LVL20:
 189              	.LBE27:
 190              	.LBE26:
  34:src/main.cpp  ****              threads[3]->isFinished() &&
 191              		.loc 1 34 39
 192 0118 E38C07FC 		beqz	a5,.L2
  36:src/main.cpp  ****     {
 193              		.loc 1 36 23 discriminator 4
 194 011c 833784FD 		ld	a5,-40(s0)
 195              	.LVL21:
 196              	.LBB28:
 197              	.LBB29:
 198              		.loc 3 19 31 is_stmt 1 discriminator 4
 199              		.loc 3 19 38 is_stmt 0 discriminator 4
 200 0120 83C78702 		lbu	a5,40(a5)
 201              	.LVL22:
 202              	.LBE29:
 203              	.LBE28:
  33:src/main.cpp  ****              threads[2]->isFinished() &&
 204              		.loc 1 33 12 discriminator 4
 205 0124 E38607FC 		beqz	a5,.L2
  39:src/main.cpp  ****     }
  40:src/main.cpp  ****     printString("test");
 206              		.loc 1 40 5 is_stmt 1
 207              		.loc 1 40 16 is_stmt 0
 208 0128 17050000 		lla	a0,.LC4
 208      13050500 
 209 0130 97000000 		call	_Z11printStringPKc@plt
 209      E7800000 
 210              	.LVL23:
 211              	.LBB30:
  41:src/main.cpp  ****     //DODATI DELETE I NEW!!!
  42:src/main.cpp  ****     for (auto &thread: threads)
 212              		.loc 1 42 24
 213 0138 930484FB 		addi	s1,s0,-72
 214              	.LVL24:
 215 013c 6F004001 		j	.L8
 216              	.LVL25:
 217              	.L7:
  43:src/main.cpp  ****     {
  44:src/main.cpp  ****         delete thread;
 218              		.loc 1 44 16
 219 0140 13050900 		mv	a0,s2
 220 0144 97000000 		call	_ZdlPv@plt
 220      E7800000 
 221              	.LVL26:
 222              	.L6:
  42:src/main.cpp  ****     {
 223              		.loc 1 42 5 is_stmt 1 discriminator 3
 224 014c 93848400 		addi	s1,s1,8
 225              	.LVL27:
 226              	.L8:
  42:src/main.cpp  ****     {
 227              		.loc 1 42 24 discriminator 1
 228 0150 930704FE 		addi	a5,s0,-32
 229 0154 6380F402 		beq	s1,a5,.L5
 230              	.LVL28:
GAS LISTING /tmp/cc69Med2.s 			page 10


 231              		.loc 1 44 9 discriminator 2
 232              		.loc 1 44 16 is_stmt 0 discriminator 2
 233 0158 03B90400 		ld	s2,0(s1)
 234              		.loc 1 44 22 discriminator 2
 235 015c E30809FE 		beqz	s2,.L6
 236              	.LVL29:
 237              	.LBB31:
 238              	.LBB32:
  17:src/../h/tcb.hpp **** 
 239              		.loc 3 17 18 is_stmt 1
  17:src/../h/tcb.hpp **** 
 240              		.loc 3 17 27 is_stmt 0
 241 0160 03358900 		ld	a0,8(s2)
  17:src/../h/tcb.hpp **** 
 242              		.loc 3 17 32
 243 0164 E30E05FC 		beqz	a0,.L7
  17:src/../h/tcb.hpp **** 
 244              		.loc 3 17 27
 245 0168 97000000 		call	_ZdaPv@plt
 245      E7800000 
 246              	.LVL30:
 247 0170 6FF01FFD 		j	.L7
 248              	.LVL31:
 249              	.L5:
 250              	.LBE32:
 251              	.LBE31:
 252              	.LBE30:
  45:src/main.cpp  ****     }
  46:src/main.cpp  ****     printString("Finished\n");
 253              		.loc 1 46 5 is_stmt 1
 254              		.loc 1 46 16 is_stmt 0
 255 0174 17050000 		lla	a0,.LC5
 255      13050500 
 256 017c 97000000 		call	_Z11printStringPKc@plt
 256      E7800000 
 257              	.LVL32:
  47:src/main.cpp  **** 
  48:src/main.cpp  ****     return 0;
 258              		.loc 1 48 5 is_stmt 1
  49:src/main.cpp  **** }
 259              		.loc 1 49 1 is_stmt 0
 260 0184 13050000 		li	a0,0
 261 0188 83308104 		ld	ra,72(sp)
 262              		.cfi_restore 1
 263 018c 03340104 		ld	s0,64(sp)
 264              		.cfi_restore 8
 265              		.cfi_def_cfa 2, 80
 266 0190 83348103 		ld	s1,56(sp)
 267              		.cfi_restore 9
 268              	.LVL33:
 269 0194 03390103 		ld	s2,48(sp)
 270              		.cfi_restore 18
 271 0198 13010105 		addi	sp,sp,80
 272              		.cfi_def_cfa_offset 0
 273 019c 67800000 		jr	ra
 274              		.cfi_endproc
 275              	.LFE36:
GAS LISTING /tmp/cc69Med2.s 			page 11


 277              	.Letext0:
 278              		.file 4 "src/../h/../lib/hw.h"
 279              		.file 5 "src/../h/syscall_c.h"
 280              		.file 6 "src/../h/../h/print.hpp"
GAS LISTING /tmp/cc69Med2.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cc69Med2.s:29     .text:0000000000000000 main
     /tmp/cc69Med2.s:33     .text:0000000000000000 .L0 
     /tmp/cc69Med2.s:34     .text:0000000000000000 .L0 
     /tmp/cc69Med2.s:35     .text:0000000000000004 .L0 
     /tmp/cc69Med2.s:40     .text:0000000000000014 .L0 
     /tmp/cc69Med2.s:41     .text:0000000000000014 .L0 
     /tmp/cc69Med2.s:42     .text:0000000000000014 .L0 
     /tmp/cc69Med2.s:43     .text:0000000000000014 .L0 
     /tmp/cc69Med2.s:45     .text:0000000000000018 .L0 
     /tmp/cc69Med2.s:47     .text:0000000000000018 .L0 
     /tmp/cc69Med2.s:48     .text:0000000000000018 .L0 
     /tmp/cc69Med2.s:49     .text:0000000000000018 .L0 
     /tmp/cc69Med2.s:53     .text:0000000000000024 .L0 
     /tmp/cc69Med2.s:55     .text:0000000000000028 .L0 
     /tmp/cc69Med2.s:56     .text:0000000000000028 .L0 
     /tmp/cc69Med2.s:59     .text:0000000000000034 .L0 
     /tmp/cc69Med2.s:60     .text:0000000000000034 .L0 
     /tmp/cc69Med2.s:64     .text:0000000000000044 .L0 
     /tmp/cc69Med2.s:66     .text:0000000000000048 .L0 
     /tmp/cc69Med2.s:67     .text:0000000000000048 .L0 
     /tmp/cc69Med2.s:71     .text:0000000000000058 .L0 
     /tmp/cc69Med2.s:72     .text:0000000000000058 .L0 
     /tmp/cc69Med2.s:76     .text:0000000000000068 .L0 
     /tmp/cc69Med2.s:78     .text:000000000000006c .L0 
     /tmp/cc69Med2.s:79     .text:000000000000006c .L0 
     /tmp/cc69Med2.s:83     .text:000000000000007c .L0 
     /tmp/cc69Med2.s:84     .text:000000000000007c .L0 
     /tmp/cc69Med2.s:88     .text:000000000000008c .L0 
     /tmp/cc69Med2.s:90     .text:0000000000000090 .L0 
     /tmp/cc69Med2.s:91     .text:0000000000000090 .L0 
     /tmp/cc69Med2.s:95     .text:00000000000000a0 .L0 
     /tmp/cc69Med2.s:96     .text:00000000000000a0 .L0 
     /tmp/cc69Med2.s:102    .text:00000000000000a8 .L0 
  src/../h/riscv.hpp:122    .text:00000000000000a8 .L0 
     /tmp/cc69Med2.s:114    .text:00000000000000ac .L0 
     /tmp/cc69Med2.s:115    .text:00000000000000ac .L0 
     /tmp/cc69Med2.s:116    .text:00000000000000ac .L0 
     /tmp/cc69Med2.s:126    .text:00000000000000b4 .L0 
     /tmp/cc69Med2.s:127    .text:00000000000000b4 .L0 
     /tmp/cc69Med2.s:135    .text:00000000000000d0 .L0 
     /tmp/cc69Med2.s:136    .text:00000000000000d0 .L0 
     /tmp/cc69Med2.s:140    .text:00000000000000e0 .L0 
     /tmp/cc69Med2.s:141    .text:00000000000000e0 .L0 
     /tmp/cc69Med2.s:147    .text:00000000000000f0 .L0 
     /tmp/cc69Med2.s:148    .text:00000000000000f0 .L0 
     /tmp/cc69Med2.s:152    .text:00000000000000f8 .L0 
     /tmp/cc69Med2.s:153    .text:00000000000000f8 .L0 
     /tmp/cc69Med2.s:154    .text:00000000000000f8 .L0 
     /tmp/cc69Med2.s:160    .text:00000000000000fc .L0 
     /tmp/cc69Med2.s:161    .text:00000000000000fc .L0 
     /tmp/cc69Med2.s:166    .text:0000000000000100 .L0 
     /tmp/cc69Med2.s:168    .text:0000000000000104 .L0 
     /tmp/cc69Med2.s:173    .text:0000000000000108 .L0 
     /tmp/cc69Med2.s:174    .text:0000000000000108 .L0 
     /tmp/cc69Med2.s:179    .text:000000000000010c .L0 
GAS LISTING /tmp/cc69Med2.s 			page 13


     /tmp/cc69Med2.s:181    .text:0000000000000110 .L0 
     /tmp/cc69Med2.s:186    .text:0000000000000114 .L0 
     /tmp/cc69Med2.s:187    .text:0000000000000114 .L0 
     /tmp/cc69Med2.s:192    .text:0000000000000118 .L0 
     /tmp/cc69Med2.s:194    .text:000000000000011c .L0 
     /tmp/cc69Med2.s:199    .text:0000000000000120 .L0 
     /tmp/cc69Med2.s:200    .text:0000000000000120 .L0 
     /tmp/cc69Med2.s:205    .text:0000000000000124 .L0 
     /tmp/cc69Med2.s:207    .text:0000000000000128 .L0 
     /tmp/cc69Med2.s:208    .text:0000000000000128 .L0 
     /tmp/cc69Med2.s:213    .text:0000000000000138 .L0 
     /tmp/cc69Med2.s:219    .text:0000000000000140 .L0 
     /tmp/cc69Med2.s:224    .text:000000000000014c .L0 
     /tmp/cc69Med2.s:228    .text:0000000000000150 .L0 
     /tmp/cc69Med2.s:232    .text:0000000000000158 .L0 
     /tmp/cc69Med2.s:233    .text:0000000000000158 .L0 
     /tmp/cc69Med2.s:235    .text:000000000000015c .L0 
     /tmp/cc69Med2.s:240    .text:0000000000000160 .L0 
     /tmp/cc69Med2.s:241    .text:0000000000000160 .L0 
     /tmp/cc69Med2.s:243    .text:0000000000000164 .L0 
     /tmp/cc69Med2.s:245    .text:0000000000000168 .L0 
     /tmp/cc69Med2.s:254    .text:0000000000000174 .L0 
     /tmp/cc69Med2.s:255    .text:0000000000000174 .L0 
     /tmp/cc69Med2.s:259    .text:0000000000000184 .L0 
     /tmp/cc69Med2.s:260    .text:0000000000000184 .L0 
     /tmp/cc69Med2.s:262    .text:000000000000018c .L0 
     /tmp/cc69Med2.s:264    .text:0000000000000190 .L0 
     /tmp/cc69Med2.s:265    .text:0000000000000190 .L0 
     /tmp/cc69Med2.s:267    .text:0000000000000194 .L0 
     /tmp/cc69Med2.s:270    .text:0000000000000198 .L0 
     /tmp/cc69Med2.s:272    .text:000000000000019c .L0 
     /tmp/cc69Med2.s:274    .text:00000000000001a0 .L0 
     /tmp/cc69Med2.s:281    .text:00000000000001a0 .L0 
     /tmp/cc69Med2.s:56     .text:0000000000000028 .L0 
     /tmp/cc69Med2.s:60     .text:0000000000000034 .L0 
     /tmp/cc69Med2.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc69Med2.s:67     .text:0000000000000048 .L0 
     /tmp/cc69Med2.s:72     .text:0000000000000058 .L0 
     /tmp/cc69Med2.s:11     .rodata.str1.8:0000000000000018 .LC1
     /tmp/cc69Med2.s:79     .text:000000000000006c .L0 
     /tmp/cc69Med2.s:84     .text:000000000000007c .L0 
     /tmp/cc69Med2.s:14     .rodata.str1.8:0000000000000030 .LC2
     /tmp/cc69Med2.s:91     .text:0000000000000090 .L0 
     /tmp/cc69Med2.s:96     .text:00000000000000a0 .L0 
     /tmp/cc69Med2.s:128    .text:00000000000000b8 .L0 
     /tmp/cc69Med2.s:17     .rodata.str1.8:0000000000000048 .LC3
     /tmp/cc69Med2.s:136    .text:00000000000000d0 .L0 
     /tmp/cc69Med2.s:20     .rodata.str1.8:0000000000000060 .LC4
     /tmp/cc69Med2.s:208    .text:0000000000000128 .L0 
     /tmp/cc69Med2.s:23     .rodata.str1.8:0000000000000068 .LC5
     /tmp/cc69Med2.s:255    .text:0000000000000174 .L0 
     /tmp/cc69Med2.s:150    .text:00000000000000f8 .L4
     /tmp/cc69Med2.s:145    .text:00000000000000f0 .L2
     /tmp/cc69Med2.s:226    .text:0000000000000150 .L8
     /tmp/cc69Med2.s:249    .text:0000000000000174 .L5
     /tmp/cc69Med2.s:222    .text:000000000000014c .L6
     /tmp/cc69Med2.s:217    .text:0000000000000140 .L7
GAS LISTING /tmp/cc69Med2.s 			page 14


     /tmp/cc69Med2.s:1276   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc69Med2.s:2496   .debug_str:00000000000005fa .LASF110
     /tmp/cc69Med2.s:2390   .debug_str:00000000000002ee .LASF111
     /tmp/cc69Med2.s:2350   .debug_str:00000000000001c8 .LASF112
     /tmp/cc69Med2.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc69Med2.s:277    .text:00000000000001a0 .Letext0
     /tmp/cc69Med2.s:2288   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc69Med2.s:2416   .debug_str:00000000000003b8 .LASF0
     /tmp/cc69Med2.s:2434   .debug_str:0000000000000402 .LASF1
     /tmp/cc69Med2.s:2404   .debug_str:0000000000000361 .LASF2
     /tmp/cc69Med2.s:2376   .debug_str:0000000000000297 .LASF4
     /tmp/cc69Med2.s:2472   .debug_str:0000000000000528 .LASF3
     /tmp/cc69Med2.s:2310   .debug_str:0000000000000090 .LASF5
     /tmp/cc69Med2.s:2438   .debug_str:0000000000000420 .LASF6
     /tmp/cc69Med2.s:2414   .debug_str:00000000000003a5 .LASF7
     /tmp/cc69Med2.s:2508   .debug_str:0000000000000724 .LASF8
     /tmp/cc69Med2.s:2360   .debug_str:000000000000020f .LASF9
     /tmp/cc69Med2.s:2448   .debug_str:0000000000000459 .LASF10
     /tmp/cc69Med2.s:2498   .debug_str:00000000000006be .LASF11
     /tmp/cc69Med2.s:2314   .debug_str:00000000000000a3 .LASF12
     /tmp/cc69Med2.s:2294   .debug_str:0000000000000011 .LASF13
     /tmp/cc69Med2.s:2322   .debug_str:00000000000000ed .LASF14
     /tmp/cc69Med2.s:2464   .debug_str:00000000000004ed .LASF15
     /tmp/cc69Med2.s:2326   .debug_str:0000000000000105 .LASF16
     /tmp/cc69Med2.s:2290   .debug_str:0000000000000000 .LASF17
     /tmp/cc69Med2.s:2374   .debug_str:000000000000028f .LASF29
     /tmp/cc69Med2.s:2300   .debug_str:0000000000000036 .LASF113
     /tmp/cc69Med2.s:2502   .debug_str:00000000000006f9 .LASF18
     /tmp/cc69Med2.s:2442   .debug_str:000000000000043e .LASF20
     /tmp/cc69Med2.s:2440   .debug_str:0000000000000433 .LASF22
     /tmp/cc69Med2.s:2402   .debug_str:0000000000000346 .LASF24
     /tmp/cc69Med2.s:2406   .debug_str:000000000000036f .LASF19
     /tmp/cc69Med2.s:2400   .debug_str:000000000000032b .LASF21
     /tmp/cc69Med2.s:2398   .debug_str:000000000000031e .LASF23
     /tmp/cc69Med2.s:2452   .debug_str:0000000000000474 .LASF25
     /tmp/cc69Med2.s:2388   .debug_str:00000000000002e1 .LASF26
     /tmp/cc69Med2.s:2302   .debug_str:000000000000003e .LASF27
     /tmp/cc69Med2.s:2460   .debug_str:00000000000004dd .LASF114
     /tmp/cc69Med2.s:2458   .debug_str:00000000000004b4 .LASF28
     /tmp/cc69Med2.s:2466   .debug_str:0000000000000503 .LASF42
     /tmp/cc69Med2.s:2490   .debug_str:00000000000005cd .LASF44
     /tmp/cc69Med2.s:2342   .debug_str:000000000000019f .LASF115
     /tmp/cc69Med2.s:2480   .debug_str:0000000000000561 .LASF30
     /tmp/cc69Med2.s:2408   .debug_str:000000000000037b .LASF31
     /tmp/cc69Med2.s:2382   .debug_str:00000000000002ba .LASF32
     /tmp/cc69Med2.s:2422   .debug_str:00000000000003d5 .LASF33
     /tmp/cc69Med2.s:2386   .debug_str:00000000000002d9 .LASF34
     /tmp/cc69Med2.s:2428   .debug_str:00000000000003e7 .LASF35
     /tmp/cc69Med2.s:2380   .debug_str:00000000000002b1 .LASF36
     /tmp/cc69Med2.s:2424   .debug_str:00000000000003db .LASF37
     /tmp/cc69Med2.s:2396   .debug_str:0000000000000310 .LASF38
     /tmp/cc69Med2.s:2364   .debug_str:0000000000000233 .LASF40
     /tmp/cc69Med2.s:2512   .debug_str:0000000000000749 .LASF116
     /tmp/cc69Med2.s:2500   .debug_str:00000000000006cd .LASF117
     /tmp/cc69Med2.s:2420   .debug_str:00000000000003cc .LASF39
     /tmp/cc69Med2.s:2488   .debug_str:00000000000005b6 .LASF41
     /tmp/cc69Med2.s:2436   .debug_str:0000000000000415 .LASF43
GAS LISTING /tmp/cc69Med2.s 			page 15


     /tmp/cc69Med2.s:2384   .debug_str:00000000000002bf .LASF45
     /tmp/cc69Med2.s:2474   .debug_str:000000000000053a .LASF118
     /tmp/cc69Med2.s:2394   .debug_str:0000000000000305 .LASF46
     /tmp/cc69Med2.s:2368   .debug_str:0000000000000264 .LASF47
     /tmp/cc69Med2.s:2348   .debug_str:00000000000001c3 .LASF48
     /tmp/cc69Med2.s:2430   .debug_str:00000000000003f1 .LASF49
     /tmp/cc69Med2.s:2330   .debug_str:000000000000012f .LASF119
     /tmp/cc69Med2.s:2324   .debug_str:00000000000000f9 .LASF50
     /tmp/cc69Med2.s:2518   .debug_str:0000000000000770 .LASF51
     /tmp/cc69Med2.s:2312   .debug_str:0000000000000097 .LASF52
     /tmp/cc69Med2.s:2462   .debug_str:00000000000004e2 .LASF53
     /tmp/cc69Med2.s:2524   .debug_str:0000000000000795 .LASF54
     /tmp/cc69Med2.s:2296   .debug_str:0000000000000021 .LASF57
     /tmp/cc69Med2.s:2482   .debug_str:0000000000000576 .LASF59
     /tmp/cc69Med2.s:2340   .debug_str:0000000000000196 .LASF55
     /tmp/cc69Med2.s:2338   .debug_str:0000000000000181 .LASF56
     /tmp/cc69Med2.s:2476   .debug_str:000000000000054b .LASF58
     /tmp/cc69Med2.s:2456   .debug_str:00000000000004a1 .LASF60
     /tmp/cc69Med2.s:2494   .debug_str:00000000000005f3 .LASF61
     /tmp/cc69Med2.s:2486   .debug_str:00000000000005a3 .LASF62
     /tmp/cc69Med2.s:2354   .debug_str:00000000000001f9 .LASF63
     /tmp/cc69Med2.s:2328   .debug_str:000000000000011b .LASF64
     /tmp/cc69Med2.s:2292   .debug_str:0000000000000009 .LASF65
     /tmp/cc69Med2.s:2366   .debug_str:0000000000000250 .LASF66
     /tmp/cc69Med2.s:2344   .debug_str:00000000000001a7 .LASF67
     /tmp/cc69Med2.s:2316   .debug_str:00000000000000b3 .LASF68
     /tmp/cc69Med2.s:2528   .debug_str:00000000000007b8 .LASF69
     /tmp/cc69Med2.s:2346   .debug_str:00000000000001af .LASF70
     /tmp/cc69Med2.s:2418   .debug_str:00000000000003c5 .LASF71
     /tmp/cc69Med2.s:2520   .debug_str:000000000000077d .LASF72
     /tmp/cc69Med2.s:2306   .debug_str:0000000000000064 .LASF73
     /tmp/cc69Med2.s:2352   .debug_str:00000000000001e6 .LASF74
     /tmp/cc69Med2.s:2358   .debug_str:0000000000000209 .LASF75
     /tmp/cc69Med2.s:2492   .debug_str:00000000000005e1 .LASF76
     /tmp/cc69Med2.s:2304   .debug_str:000000000000005e .LASF77
     /tmp/cc69Med2.s:2532   .debug_str:00000000000007c5 .LASF78
     /tmp/cc69Med2.s:2526   .debug_str:00000000000007ad .LASF79
     /tmp/cc69Med2.s:2468   .debug_str:0000000000000509 .LASF80
     /tmp/cc69Med2.s:2432   .debug_str:00000000000003f7 .LASF81
     /tmp/cc69Med2.s:2484   .debug_str:000000000000058b .LASF82
     /tmp/cc69Med2.s:2320   .debug_str:00000000000000e3 .LASF83
     /tmp/cc69Med2.s:2370   .debug_str:000000000000026f .LASF84
     /tmp/cc69Med2.s:2410   .debug_str:0000000000000394 .LASF85
     /tmp/cc69Med2.s:2362   .debug_str:000000000000021d .LASF86
     /tmp/cc69Med2.s:2478   .debug_str:0000000000000552 .LASF87
     /tmp/cc69Med2.s:2318   .debug_str:00000000000000c7 .LASF88
     /tmp/cc69Med2.s:2510   .debug_str:0000000000000734 .LASF89
     /tmp/cc69Med2.s:2332   .debug_str:000000000000013e .LASF90
     /tmp/cc69Med2.s:2446   .debug_str:0000000000000454 .LASF91
     /tmp/cc69Med2.s:30     .text:0000000000000000 .LFB36
     /tmp/cc69Med2.s:275    .text:00000000000001a0 .LFE36
     /tmp/cc69Med2.s:2356   .debug_str:0000000000000201 .LASF92
     /tmp/cc69Med2.s:2207   .debug_loc:0000000000000000 .LLST0
     /tmp/cc69Med2.s:211    .text:0000000000000138 .LBB30
     /tmp/cc69Med2.s:252    .text:0000000000000174 .LBE30
     /tmp/cc69Med2.s:2426   .debug_str:00000000000003e0 .LASF93
     /tmp/cc69Med2.s:2214   .debug_loc:0000000000000023 .LLST6
GAS LISTING /tmp/cc69Med2.s 			page 16


     /tmp/cc69Med2.s:2516   .debug_str:0000000000000764 .LASF94
     /tmp/cc69Med2.s:2450   .debug_str:0000000000000468 .LASF120
     /tmp/cc69Med2.s:2225   .debug_loc:0000000000000059 .LLST7
     /tmp/cc69Med2.s:2392   .debug_str:00000000000002fb .LASF95
     /tmp/cc69Med2.s:237    .text:0000000000000160 .LBB31
     /tmp/cc69Med2.s:251    .text:0000000000000174 .LBE31
     /tmp/cc69Med2.s:2232   .debug_loc:000000000000007c .LLST8
     /tmp/cc69Med2.s:246    .text:0000000000000170 .LVL30
     /tmp/cc69Med2.s:221    .text:000000000000014c .LVL26
     /tmp/cc69Med2.s:98     .text:00000000000000a8 .LBB18
     /tmp/cc69Med2.s:110    .text:00000000000000ac .LBE18
     /tmp/cc69Med2.s:112    .text:00000000000000ac .LBB20
     /tmp/cc69Med2.s:124    .text:00000000000000b4 .LBE20
     /tmp/cc69Med2.s:2239   .debug_loc:000000000000009f .LLST1
     /tmp/cc69Med2.s:156    .text:00000000000000fc .LBB22
     /tmp/cc69Med2.s:164    .text:0000000000000100 .LBE22
     /tmp/cc69Med2.s:2247   .debug_loc:00000000000000c3 .LLST2
     /tmp/cc69Med2.s:170    .text:0000000000000108 .LBB24
     /tmp/cc69Med2.s:177    .text:000000000000010c .LBE24
     /tmp/cc69Med2.s:2254   .debug_loc:00000000000000e6 .LLST3
     /tmp/cc69Med2.s:183    .text:0000000000000114 .LBB26
     /tmp/cc69Med2.s:190    .text:0000000000000118 .LBE26
     /tmp/cc69Med2.s:2261   .debug_loc:0000000000000109 .LLST4
     /tmp/cc69Med2.s:196    .text:0000000000000120 .LBB28
     /tmp/cc69Med2.s:203    .text:0000000000000124 .LBE28
     /tmp/cc69Med2.s:2268   .debug_loc:000000000000012c .LLST5
     /tmp/cc69Med2.s:51     .text:0000000000000024 .LVL0
     /tmp/cc69Med2.s:62     .text:0000000000000044 .LVL1
     /tmp/cc69Med2.s:69     .text:0000000000000058 .LVL2
     /tmp/cc69Med2.s:74     .text:0000000000000068 .LVL3
     /tmp/cc69Med2.s:81     .text:000000000000007c .LVL4
     /tmp/cc69Med2.s:86     .text:000000000000008c .LVL5
     /tmp/cc69Med2.s:93     .text:00000000000000a0 .LVL6
     /tmp/cc69Med2.s:131    .text:00000000000000cc .LVL10
     /tmp/cc69Med2.s:138    .text:00000000000000e0 .LVL12
     /tmp/cc69Med2.s:143    .text:00000000000000ec .LVL13
     /tmp/cc69Med2.s:149    .text:00000000000000f8 .LVL14
     /tmp/cc69Med2.s:210    .text:0000000000000138 .LVL23
     /tmp/cc69Med2.s:257    .text:0000000000000184 .LVL32
     /tmp/cc69Med2.s:2530   .debug_str:00000000000007c0 .LASF96
     /tmp/cc69Med2.s:2444   .debug_str:000000000000044e .LASF97
     /tmp/cc69Med2.s:2522   .debug_str:0000000000000790 .LASF98
     /tmp/cc69Med2.s:2372   .debug_str:0000000000000285 .LASF99
     /tmp/cc69Med2.s:2506   .debug_str:0000000000000714 .LASF121
     /tmp/cc69Med2.s:2470   .debug_str:0000000000000521 .LASF100
     /tmp/cc69Med2.s:2378   .debug_str:000000000000029e .LASF102
     /tmp/cc69Med2.s:2412   .debug_str:000000000000039e .LASF101
     /tmp/cc69Med2.s:2454   .debug_str:0000000000000491 .LASF103
     /tmp/cc69Med2.s:2334   .debug_str:0000000000000160 .LASF104
     /tmp/cc69Med2.s:2298   .debug_str:000000000000002a .LASF106
     /tmp/cc69Med2.s:2308   .debug_str:000000000000006b .LASF105
     /tmp/cc69Med2.s:2336   .debug_str:0000000000000173 .LASF107
     /tmp/cc69Med2.s:2504   .debug_str:0000000000000702 .LASF108
     /tmp/cc69Med2.s:2514   .debug_str:0000000000000757 .LASF109
     /tmp/cc69Med2.s:133    .text:00000000000000d0 .LVL11
     /tmp/cc69Med2.s:214    .text:000000000000013c .LVL24
     /tmp/cc69Med2.s:216    .text:0000000000000140 .LVL25
GAS LISTING /tmp/cc69Med2.s 			page 17


     /tmp/cc69Med2.s:225    .text:0000000000000150 .LVL27
     /tmp/cc69Med2.s:230    .text:0000000000000158 .LVL28
     /tmp/cc69Med2.s:248    .text:0000000000000174 .LVL31
     /tmp/cc69Med2.s:268    .text:0000000000000194 .LVL33
     /tmp/cc69Med2.s:236    .text:0000000000000160 .LVL29
     /tmp/cc69Med2.s:107    .text:00000000000000ac .LVL8
     /tmp/cc69Med2.s:121    .text:00000000000000b4 .LVL9
     /tmp/cc69Med2.s:155    .text:00000000000000fc .LVL15
     /tmp/cc69Med2.s:162    .text:0000000000000100 .LVL16
     /tmp/cc69Med2.s:169    .text:0000000000000108 .LVL17
     /tmp/cc69Med2.s:175    .text:000000000000010c .LVL18
     /tmp/cc69Med2.s:182    .text:0000000000000114 .LVL19
     /tmp/cc69Med2.s:188    .text:0000000000000118 .LVL20
     /tmp/cc69Med2.s:195    .text:0000000000000120 .LVL21
     /tmp/cc69Med2.s:201    .text:0000000000000124 .LVL22
     /tmp/cc69Med2.s:282    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN7_thread12createThreadEPFvvE
_ZN7_thread7runningE
_Z11workerBodyAv
_Z11printStringPKc
_Z11workerBodyBv
_Z11workerBodyCv
_ZN5Riscv14supervisorTrapEv
_Z11workerBodyDv
_Z13thread_createPP7_threadPFvPvES2_
_Z12printIntegerm
_ZN7_thread5yieldEv
_ZdlPv
_ZdaPv
