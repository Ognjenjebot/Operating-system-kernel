GAS LISTING /tmp/ccJwcpPP.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 54687265 		.string	"ThreadA created\n"
   9      61644120 
   9      63726561 
   9      7465640A 
   9      00
  10 0011 00000000 		.align	3
  10      000000
  11              	.LC1:
  12 0018 74657374 		.string	"test"
  12      00
  13 001d 000000   		.align	3
  14              	.LC2:
  15 0020 46696E69 		.string	"Finished\n"
  15      73686564 
  15      0A00
  16              		.text
  17              		.align	2
  18              		.globl	main
  20              	main:
  21              	.LFB51:
  22              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** //
   2:src/main.cpp  **** // Created by marko on 20.4.22..
   3:src/main.cpp  **** //
   4:src/main.cpp  **** 
   5:src/main.cpp  **** #include "../h/tcb.hpp"
   6:src/main.cpp  **** #include "../h/workers.hpp"
   7:src/main.cpp  **** #include "../h/print.hpp"
   8:src/main.cpp  **** #include "../h/riscv.hpp"
   9:src/main.cpp  **** #include "../h/syscall_c.h"
  10:src/main.cpp  **** 
  11:src/main.cpp  **** 
  12:src/main.cpp  **** int main()
  13:src/main.cpp  **** {
  23              		.loc 1 13 1
  24              		.cfi_startproc
  25 0000 130101FB 		addi	sp,sp,-80
  26              		.cfi_def_cfa_offset 80
  27 0004 23341104 		sd	ra,72(sp)
  28 0008 23308104 		sd	s0,64(sp)
  29 000c 233C9102 		sd	s1,56(sp)
  30 0010 23382103 		sd	s2,48(sp)
  31              		.cfi_offset 1, -8
  32              		.cfi_offset 8, -16
  33              		.cfi_offset 9, -24
  34              		.cfi_offset 18, -32
  35 0014 13040105 		addi	s0,sp,80
  36              		.cfi_def_cfa 8, 0
  14:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
GAS LISTING /tmp/ccJwcpPP.s 			page 2


  37              		.loc 1 14 5
  38              		.loc 1 14 19 is_stmt 0
  39 0018 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  39      83B70700 
  40              	.LVL0:
  41              	.LBB16:
  42              	.LBB17:
  43              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** #include "../h/tcb.hpp"
  10:src/../h/riscv.hpp **** #include "list.hpp"
  11:src/../h/riscv.hpp **** #include "_buffer.hpp"
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp **** template<typename T>
  14:src/../h/riscv.hpp **** class List;
  15:src/../h/riscv.hpp **** class Riscv
  16:src/../h/riscv.hpp **** {
  17:src/../h/riscv.hpp **** public:
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  20:src/../h/riscv.hpp ****     static void popSppSpie();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // read register scause
  23:src/../h/riscv.hpp ****     static uint64 r_scause();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // write register scause
  26:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // read register sepc
  29:src/../h/riscv.hpp ****     static uint64 r_sepc();
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // write register sepc
  32:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // read register stvec
  35:src/../h/riscv.hpp ****     static uint64 r_stvec();
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // write register stvec
  38:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     // read register stval
  41:src/../h/riscv.hpp ****     static uint64 r_stval();
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // write register stval
  44:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     enum BitMaskSip
  47:src/../h/riscv.hpp ****     {
  48:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  49:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
GAS LISTING /tmp/ccJwcpPP.s 			page 3


  50:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  51:src/../h/riscv.hpp ****     };
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     // mask set register sip
  54:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     // mask clear register sip
  57:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     // read register sip
  60:src/../h/riscv.hpp ****     static uint64 r_sip();
  61:src/../h/riscv.hpp **** 
  62:src/../h/riscv.hpp ****     // write register sip
  63:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     enum BitMaskSstatus
  66:src/../h/riscv.hpp ****     {
  67:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  68:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  69:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  70:src/../h/riscv.hpp ****     };
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // mask set register sstatus
  73:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // mask clear register sstatus
  76:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     // read register sstatus
  79:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // write register sstatus
  82:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // supervisor trap
  85:src/../h/riscv.hpp ****     static void supervisorTrap();
  86:src/../h/riscv.hpp ****     static char ttt;
  87:src/../h/riscv.hpp ****     static KeyboardBuffer buff1, buff2;
  88:src/../h/riscv.hpp **** private:
  89:src/../h/riscv.hpp **** 
  90:src/../h/riscv.hpp ****     // supervisor trap handler
  91:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  92:src/../h/riscv.hpp ****     friend class _thread;
  93:src/../h/riscv.hpp ****     static List<_thread> sleepingThreads;
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp **** };
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  98:src/../h/riscv.hpp **** {
  99:src/../h/riscv.hpp ****     uint64 volatile scause;
 100:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 101:src/../h/riscv.hpp ****     return scause;
 102:src/../h/riscv.hpp **** }
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 105:src/../h/riscv.hpp **** {
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
GAS LISTING /tmp/ccJwcpPP.s 			page 4


 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 110:src/../h/riscv.hpp **** {
 111:src/../h/riscv.hpp ****     uint64 volatile sepc;
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 113:src/../h/riscv.hpp ****     return sepc;
 114:src/../h/riscv.hpp **** }
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 117:src/../h/riscv.hpp **** {
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 119:src/../h/riscv.hpp **** }
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 122:src/../h/riscv.hpp **** {
 123:src/../h/riscv.hpp ****     uint64 volatile stvec;
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 125:src/../h/riscv.hpp ****     return stvec;
 126:src/../h/riscv.hpp **** }
 127:src/../h/riscv.hpp **** 
 128:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 129:src/../h/riscv.hpp **** {
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  44              		.loc 2 130 5 is_stmt 1
  45              		.loc 2 130 69 is_stmt 0
  46              	#APP
  47              	# 130 "src/../h/riscv.hpp" 1
 131              	}
  48              		csrw stvec, a5
  49              	# 0 "" 2
  50              	.LVL1:
  51              	#NO_APP
  52              	.LBE17:
  53              	.LBE16:
  15:src/main.cpp  ****     _thread *threads[5];
  54              		.loc 1 15 5 is_stmt 1
  16:src/main.cpp  **** 
  17:src/main.cpp  ****     threads[0] = _thread::createThread(nullptr);
  55              		.loc 1 17 5
  56              		.loc 1 17 39 is_stmt 0
  57 0024 13050000 		li	a0,0
  58 0028 97000000 		call	_ZN7_thread12createThreadEPFvPvE@plt
  58      E7800000 
  59              	.LVL2:
  60              		.loc 1 17 16
  61 0030 233CA4FA 		sd	a0,-72(s0)
  18:src/main.cpp  ****     _thread::running = threads[0];
  62              		.loc 1 18 5 is_stmt 1
  63              		.loc 1 18 22 is_stmt 0
  64 0034 97070000 		la	a5,_ZN7_thread7runningE
  64      83B70700 
  65 003c 23B0A700 		sd	a0,0(a5)
  19:src/main.cpp  ****     if(Riscv::buff2.itemAvailable == nullptr){
  66              		.loc 1 19 5 is_stmt 1
  67              		.loc 1 19 21 is_stmt 0
  68 0040 97070000 		la	a5,_ZN5Riscv5buff2E
GAS LISTING /tmp/ccJwcpPP.s 			page 5


  68      83B70700 
  69 0048 83B70700 		ld	a5,0(a5)
  70              		.loc 1 19 5
  71 004c 638E0704 		beqz	a5,.L12
  72              	.L2:
  20:src/main.cpp  ****         _sem::createSem(&Riscv::buff2.itemAvailable, 0);
  21:src/main.cpp  ****     }
  22:src/main.cpp  ****     if(Riscv::buff1.itemAvailable == nullptr){
  73              		.loc 1 22 5 is_stmt 1
  74              		.loc 1 22 21 is_stmt 0
  75 0050 97070000 		la	a5,_ZN5Riscv5buff1E
  75      83B70700 
  76 0058 83B70700 		ld	a5,0(a5)
  77              		.loc 1 22 5
  78 005c 63820706 		beqz	a5,.L13
  79              	.L3:
  23:src/main.cpp  ****         _sem::createSem(&Riscv::buff1.itemAvailable, 0);
  24:src/main.cpp  ****     }
  25:src/main.cpp  **** //    thread_create(&threads[1], &workerBodyA, nullptr);
  26:src/main.cpp  **** //    threads[1] = _thread::createThread(workerBodyA);
  27:src/main.cpp  ****     thread_create(&threads[1], workerBodyA, nullptr);
  80              		.loc 1 27 5 is_stmt 1
  81              		.loc 1 27 18 is_stmt 0
  82 0060 13060000 		li	a2,0
  83 0064 97050000 		la	a1,_Z11workerBodyAPv
  83      83B50500 
  84 006c 130504FC 		addi	a0,s0,-64
  85 0070 97000000 		call	_Z13thread_createPP7_threadPFvPvES2_@plt
  85      E7800000 
  86              	.LVL3:
  28:src/main.cpp  ****     printString("ThreadA created\n");
  87              		.loc 1 28 5 is_stmt 1
  88              		.loc 1 28 16 is_stmt 0
  89 0078 17050000 		lla	a0,.LC0
  89      13050500 
  90 0080 97000000 		call	_Z11printStringPKc@plt
  90      E7800000 
  91              	.LVL4:
  29:src/main.cpp  ****     threads[2] = _thread::createThread(&_thread::consoleWrite);
  92              		.loc 1 29 5 is_stmt 1
  93              		.loc 1 29 39 is_stmt 0
  94 0088 17050000 		la	a0,_ZN7_thread12consoleWriteEPv
  94      03350500 
  95 0090 97000000 		call	_ZN7_thread12createThreadEPFvPvE@plt
  95      E7800000 
  96              	.LVL5:
  97              		.loc 1 29 16
  98 0098 2334A4FC 		sd	a0,-56(s0)
  30:src/main.cpp  **** //    threads[2] = _thread::createThread(workerBodyB);
  31:src/main.cpp  **** //    printString("ThreadB created\n");
  32:src/main.cpp  **** //    threads[3] = _thread::createThread(workerBodyC);
  33:src/main.cpp  **** //    printString("ThreadC created\n");
  34:src/main.cpp  **** ////    threads[4] = _thread::createThread(workerBodyD);
  35:src/main.cpp  **** ////    printString("ThreadD created\n");
  36:src/main.cpp  **** //
  37:src/main.cpp  **** 
  38:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
GAS LISTING /tmp/ccJwcpPP.s 			page 6


  99              		.loc 1 38 5 is_stmt 1
 100              	.LVL6:
 101              	.LBB18:
 102              	.LBB19:
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 134:src/../h/riscv.hpp **** {
 135:src/../h/riscv.hpp ****     uint64 volatile stval;
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 137:src/../h/riscv.hpp ****     return stval;
 138:src/../h/riscv.hpp **** }
 139:src/../h/riscv.hpp **** 
 140:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 141:src/../h/riscv.hpp **** {
 142:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 143:src/../h/riscv.hpp **** }
 144:src/../h/riscv.hpp **** 
 145:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 146:src/../h/riscv.hpp **** {
 147:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 148:src/../h/riscv.hpp **** }
 149:src/../h/riscv.hpp **** 
 150:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 151:src/../h/riscv.hpp **** {
 152:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 156:src/../h/riscv.hpp **** {
 157:src/../h/riscv.hpp ****     uint64 volatile sip;
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 159:src/../h/riscv.hpp ****     return sip;
 160:src/../h/riscv.hpp **** }
 161:src/../h/riscv.hpp **** 
 162:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 163:src/../h/riscv.hpp **** {
 164:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 165:src/../h/riscv.hpp **** }
 166:src/../h/riscv.hpp **** 
 167:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 168:src/../h/riscv.hpp **** {
 169:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 103              		.loc 2 169 5
 104              		.loc 2 169 68 is_stmt 0
 105 009c 93072000 		li	a5,2
 106              	#APP
 107              	# 169 "src/../h/riscv.hpp" 1
 170              	}
 108              		csrs sstatus, a5
 109              	# 0 "" 2
 110              		.loc 2 170 1
 111              	#NO_APP
 112 00a4 6F00C003 		j	.L6
 113              	.LVL7:
 114              	.L12:
 115              	.LBE19:
 116              	.LBE18:
GAS LISTING /tmp/ccJwcpPP.s 			page 7


  20:src/main.cpp  ****     }
 117              		.loc 1 20 9 is_stmt 1
  20:src/main.cpp  ****     }
 118              		.loc 1 20 24 is_stmt 0
 119 00a8 93050000 		li	a1,0
 120 00ac 17050000 		la	a0,_ZN5Riscv5buff2E
 120      03350500 
 121 00b4 97000000 		call	_ZN4_sem9createSemEPPS_m@plt
 121      E7800000 
 122              	.LVL8:
 123 00bc 6FF05FF9 		j	.L2
 124              	.L13:
  23:src/main.cpp  ****     }
 125              		.loc 1 23 9 is_stmt 1
  23:src/main.cpp  ****     }
 126              		.loc 1 23 24 is_stmt 0
 127 00c0 93050000 		li	a1,0
 128 00c4 17050000 		la	a0,_ZN5Riscv5buff1E
 128      03350500 
 129 00cc 97000000 		call	_ZN4_sem9createSemEPPS_m@plt
 129      E7800000 
 130              	.LVL9:
 131 00d4 6FF0DFF8 		j	.L3
 132              	.L4:
  39:src/main.cpp  **** //    int ret = thread_create(&threads[4], reinterpret_cast<void (*)(void *)>(workerBodyD), nullptr
  40:src/main.cpp  **** //    printString("ThreadD created\n");
  41:src/main.cpp  **** //    printInteger(ret);
  42:src/main.cpp  **** 
  43:src/main.cpp  **** //    while (!(threads[1]->isFinished() &&
  44:src/main.cpp  **** //             threads[2]->isFinished() &&
  45:src/main.cpp  **** //             threads[3]->isFinished() &&
  46:src/main.cpp  **** //             threads[4]->isFinished()))
  47:src/main.cpp  **** //    {
  48:src/main.cpp  **** //        _thread::yield();
  49:src/main.cpp  **** //    }
  50:src/main.cpp  ****     while (!(threads[0]->isFinished() && threads[1]->isFinished() && threads[2]->isFinished()))
  51:src/main.cpp  ****     {
  52:src/main.cpp  ****         _thread::yield();
 133              		.loc 1 52 9 is_stmt 1 discriminator 5
 134              		.loc 1 52 23 is_stmt 0 discriminator 5
 135 00d8 97000000 		call	_ZN7_thread5yieldEv@plt
 135      E7800000 
 136              	.LVL10:
 137              	.L6:
  50:src/main.cpp  ****     {
 138              		.loc 1 50 5 is_stmt 1
  50:src/main.cpp  ****     {
 139              		.loc 1 50 12
  50:src/main.cpp  ****     {
 140              		.loc 1 50 23 is_stmt 0
 141 00e0 833784FB 		ld	a5,-72(s0)
 142              	.LVL11:
 143              	.LBB20:
 144              	.LBB21:
 145              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
GAS LISTING /tmp/ccJwcpPP.s 			page 8


   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "syscall_c.h"
   9:src/../h/tcb.hpp **** #include "../lib/hw.h"
  10:src/../h/tcb.hpp **** #include "scheduler.hpp"
  11:src/../h/tcb.hpp **** #include "../h/print.hpp"
  12:src/../h/tcb.hpp **** #include "_sem.hpp"
  13:src/../h/tcb.hpp **** 
  14:src/../h/tcb.hpp **** // Thread Control Block
  15:src/../h/tcb.hpp **** 
  16:src/../h/tcb.hpp **** class _thread
  17:src/../h/tcb.hpp **** {
  18:src/../h/tcb.hpp **** public:
  19:src/../h/tcb.hpp ****     ~_thread() { delete[] stack; }
  20:src/../h/tcb.hpp **** 
  21:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 146              		.loc 3 21 31 is_stmt 1
 147              		.loc 3 21 38 is_stmt 0
 148 00e4 83C78702 		lbu	a5,40(a5)
 149              	.LVL12:
 150              	.LBE21:
 151              	.LBE20:
  50:src/main.cpp  ****     {
 152              		.loc 1 50 12
 153 00e8 E38807FE 		beqz	a5,.L4
  50:src/main.cpp  ****     {
 154              		.loc 1 50 51 discriminator 2
 155 00ec 833704FC 		ld	a5,-64(s0)
 156              	.LVL13:
 157              	.LBB22:
 158              	.LBB23:
 159              		.loc 3 21 31 is_stmt 1 discriminator 2
 160              		.loc 3 21 38 is_stmt 0 discriminator 2
 161 00f0 83C78702 		lbu	a5,40(a5)
 162              	.LVL14:
 163              	.LBE23:
 164              	.LBE22:
  50:src/main.cpp  ****     {
 165              		.loc 1 50 39 discriminator 2
 166 00f4 E38207FE 		beqz	a5,.L4
  50:src/main.cpp  ****     {
 167              		.loc 1 50 79 discriminator 4
 168 00f8 833784FC 		ld	a5,-56(s0)
 169              	.LVL15:
 170              	.LBB24:
 171              	.LBB25:
 172              		.loc 3 21 31 is_stmt 1 discriminator 4
 173              		.loc 3 21 38 is_stmt 0 discriminator 4
 174 00fc 83C78702 		lbu	a5,40(a5)
 175              	.LVL16:
 176              	.LBE25:
 177              	.LBE24:
  50:src/main.cpp  ****     {
 178              		.loc 1 50 12 discriminator 4
GAS LISTING /tmp/ccJwcpPP.s 			page 9


 179 0100 E38C07FC 		beqz	a5,.L4
  53:src/main.cpp  ****     }
  54:src/main.cpp  ****     printString("test");
 180              		.loc 1 54 5 is_stmt 1
 181              		.loc 1 54 16 is_stmt 0
 182 0104 17050000 		lla	a0,.LC1
 182      13050500 
 183 010c 97000000 		call	_Z11printStringPKc@plt
 183      E7800000 
 184              	.LVL17:
 185              	.LBB26:
  55:src/main.cpp  ****     //DODATI DELETE I NEW!!!
  56:src/main.cpp  ****     for (auto &thread: threads)
 186              		.loc 1 56 24
 187 0114 930484FB 		addi	s1,s0,-72
 188 0118 6F004001 		j	.L10
 189              	.LVL18:
 190              	.L9:
  57:src/main.cpp  ****     {
  58:src/main.cpp  ****         delete thread;
 191              		.loc 1 58 16
 192 011c 13050900 		mv	a0,s2
 193 0120 97000000 		call	_ZdlPv@plt
 193      E7800000 
 194              	.LVL19:
 195              	.L8:
  56:src/main.cpp  ****     {
 196              		.loc 1 56 5 is_stmt 1 discriminator 3
 197 0128 93848400 		addi	s1,s1,8
 198              	.LVL20:
 199              	.L10:
  56:src/main.cpp  ****     {
 200              		.loc 1 56 24 discriminator 1
 201 012c 930704FE 		addi	a5,s0,-32
 202 0130 6380F402 		beq	s1,a5,.L7
 203              	.LVL21:
 204              		.loc 1 58 9 discriminator 2
 205              		.loc 1 58 16 is_stmt 0 discriminator 2
 206 0134 03B90400 		ld	s2,0(s1)
 207              		.loc 1 58 22 discriminator 2
 208 0138 E30809FE 		beqz	s2,.L8
 209              	.LVL22:
 210              	.LBB27:
 211              	.LBB28:
  19:src/../h/tcb.hpp **** 
 212              		.loc 3 19 18 is_stmt 1
  19:src/../h/tcb.hpp **** 
 213              		.loc 3 19 27 is_stmt 0
 214 013c 03358900 		ld	a0,8(s2)
  19:src/../h/tcb.hpp **** 
 215              		.loc 3 19 32
 216 0140 E30E05FC 		beqz	a0,.L9
  19:src/../h/tcb.hpp **** 
 217              		.loc 3 19 27
 218 0144 97000000 		call	_ZdaPv@plt
 218      E7800000 
 219              	.LVL23:
GAS LISTING /tmp/ccJwcpPP.s 			page 10


 220 014c 6FF01FFD 		j	.L9
 221              	.LVL24:
 222              	.L7:
 223              	.LBE28:
 224              	.LBE27:
 225              	.LBE26:
  59:src/main.cpp  ****     }
  60:src/main.cpp  ****     printString("Finished\n");
 226              		.loc 1 60 5 is_stmt 1
 227              		.loc 1 60 16 is_stmt 0
 228 0150 17050000 		lla	a0,.LC2
 228      13050500 
 229 0158 97000000 		call	_Z11printStringPKc@plt
 229      E7800000 
 230              	.LVL25:
  61:src/main.cpp  **** 
  62:src/main.cpp  ****     return 0;
 231              		.loc 1 62 5 is_stmt 1
  63:src/main.cpp  **** }
 232              		.loc 1 63 1 is_stmt 0
 233 0160 13050000 		li	a0,0
 234 0164 83308104 		ld	ra,72(sp)
 235              		.cfi_restore 1
 236 0168 03340104 		ld	s0,64(sp)
 237              		.cfi_restore 8
 238              		.cfi_def_cfa 2, 80
 239 016c 83348103 		ld	s1,56(sp)
 240              		.cfi_restore 9
 241              	.LVL26:
 242 0170 03390103 		ld	s2,48(sp)
 243              		.cfi_restore 18
 244 0174 13010105 		addi	sp,sp,80
 245              		.cfi_def_cfa_offset 0
 246 0178 67800000 		jr	ra
 247              		.cfi_endproc
 248              	.LFE51:
 250              	.Letext0:
 251              		.file 4 "src/../h/../lib/hw.h"
 252              		.file 5 "src/../h/syscall_c.h"
 253              		.file 6 "src/../h/_sem.hpp"
 254              		.file 7 "src/../h/list.hpp"
 255              		.file 8 "src/../h/_buffer.hpp"
 256              		.file 9 "src/../h/../h/print.hpp"
GAS LISTING /tmp/ccJwcpPP.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccJwcpPP.s:20     .text:0000000000000000 main
     /tmp/ccJwcpPP.s:24     .text:0000000000000000 .L0 
     /tmp/ccJwcpPP.s:25     .text:0000000000000000 .L0 
     /tmp/ccJwcpPP.s:26     .text:0000000000000004 .L0 
     /tmp/ccJwcpPP.s:31     .text:0000000000000014 .L0 
     /tmp/ccJwcpPP.s:32     .text:0000000000000014 .L0 
     /tmp/ccJwcpPP.s:33     .text:0000000000000014 .L0 
     /tmp/ccJwcpPP.s:34     .text:0000000000000014 .L0 
     /tmp/ccJwcpPP.s:36     .text:0000000000000018 .L0 
     /tmp/ccJwcpPP.s:38     .text:0000000000000018 .L0 
     /tmp/ccJwcpPP.s:39     .text:0000000000000018 .L0 
     /tmp/ccJwcpPP.s:45     .text:0000000000000020 .L0 
  src/../h/riscv.hpp:130    .text:0000000000000020 .L0 
     /tmp/ccJwcpPP.s:55     .text:0000000000000024 .L0 
     /tmp/ccJwcpPP.s:56     .text:0000000000000024 .L0 
     /tmp/ccJwcpPP.s:57     .text:0000000000000024 .L0 
     /tmp/ccJwcpPP.s:61     .text:0000000000000030 .L0 
     /tmp/ccJwcpPP.s:63     .text:0000000000000034 .L0 
     /tmp/ccJwcpPP.s:64     .text:0000000000000034 .L0 
     /tmp/ccJwcpPP.s:67     .text:0000000000000040 .L0 
     /tmp/ccJwcpPP.s:68     .text:0000000000000040 .L0 
     /tmp/ccJwcpPP.s:71     .text:000000000000004c .L0 
     /tmp/ccJwcpPP.s:74     .text:0000000000000050 .L0 
     /tmp/ccJwcpPP.s:75     .text:0000000000000050 .L0 
     /tmp/ccJwcpPP.s:78     .text:000000000000005c .L0 
     /tmp/ccJwcpPP.s:81     .text:0000000000000060 .L0 
     /tmp/ccJwcpPP.s:82     .text:0000000000000060 .L0 
     /tmp/ccJwcpPP.s:88     .text:0000000000000078 .L0 
     /tmp/ccJwcpPP.s:89     .text:0000000000000078 .L0 
     /tmp/ccJwcpPP.s:93     .text:0000000000000088 .L0 
     /tmp/ccJwcpPP.s:94     .text:0000000000000088 .L0 
     /tmp/ccJwcpPP.s:98     .text:0000000000000098 .L0 
     /tmp/ccJwcpPP.s:103    .text:000000000000009c .L0 
     /tmp/ccJwcpPP.s:104    .text:000000000000009c .L0 
     /tmp/ccJwcpPP.s:105    .text:000000000000009c .L0 
     /tmp/ccJwcpPP.s:112    .text:00000000000000a4 .L0 
     /tmp/ccJwcpPP.s:118    .text:00000000000000a8 .L0 
     /tmp/ccJwcpPP.s:119    .text:00000000000000a8 .L0 
     /tmp/ccJwcpPP.s:126    .text:00000000000000c0 .L0 
     /tmp/ccJwcpPP.s:127    .text:00000000000000c0 .L0 
     /tmp/ccJwcpPP.s:134    .text:00000000000000d8 .L0 
     /tmp/ccJwcpPP.s:135    .text:00000000000000d8 .L0 
     /tmp/ccJwcpPP.s:139    .text:00000000000000e0 .L0 
     /tmp/ccJwcpPP.s:140    .text:00000000000000e0 .L0 
     /tmp/ccJwcpPP.s:141    .text:00000000000000e0 .L0 
     /tmp/ccJwcpPP.s:147    .text:00000000000000e4 .L0 
     /tmp/ccJwcpPP.s:148    .text:00000000000000e4 .L0 
     /tmp/ccJwcpPP.s:153    .text:00000000000000e8 .L0 
     /tmp/ccJwcpPP.s:155    .text:00000000000000ec .L0 
     /tmp/ccJwcpPP.s:160    .text:00000000000000f0 .L0 
     /tmp/ccJwcpPP.s:161    .text:00000000000000f0 .L0 
     /tmp/ccJwcpPP.s:166    .text:00000000000000f4 .L0 
     /tmp/ccJwcpPP.s:168    .text:00000000000000f8 .L0 
     /tmp/ccJwcpPP.s:173    .text:00000000000000fc .L0 
     /tmp/ccJwcpPP.s:174    .text:00000000000000fc .L0 
GAS LISTING /tmp/ccJwcpPP.s 			page 12


     /tmp/ccJwcpPP.s:179    .text:0000000000000100 .L0 
     /tmp/ccJwcpPP.s:181    .text:0000000000000104 .L0 
     /tmp/ccJwcpPP.s:182    .text:0000000000000104 .L0 
     /tmp/ccJwcpPP.s:187    .text:0000000000000114 .L0 
     /tmp/ccJwcpPP.s:192    .text:000000000000011c .L0 
     /tmp/ccJwcpPP.s:197    .text:0000000000000128 .L0 
     /tmp/ccJwcpPP.s:201    .text:000000000000012c .L0 
     /tmp/ccJwcpPP.s:205    .text:0000000000000134 .L0 
     /tmp/ccJwcpPP.s:206    .text:0000000000000134 .L0 
     /tmp/ccJwcpPP.s:208    .text:0000000000000138 .L0 
     /tmp/ccJwcpPP.s:213    .text:000000000000013c .L0 
     /tmp/ccJwcpPP.s:214    .text:000000000000013c .L0 
     /tmp/ccJwcpPP.s:216    .text:0000000000000140 .L0 
     /tmp/ccJwcpPP.s:218    .text:0000000000000144 .L0 
     /tmp/ccJwcpPP.s:227    .text:0000000000000150 .L0 
     /tmp/ccJwcpPP.s:228    .text:0000000000000150 .L0 
     /tmp/ccJwcpPP.s:232    .text:0000000000000160 .L0 
     /tmp/ccJwcpPP.s:233    .text:0000000000000160 .L0 
     /tmp/ccJwcpPP.s:235    .text:0000000000000168 .L0 
     /tmp/ccJwcpPP.s:237    .text:000000000000016c .L0 
     /tmp/ccJwcpPP.s:238    .text:000000000000016c .L0 
     /tmp/ccJwcpPP.s:240    .text:0000000000000170 .L0 
     /tmp/ccJwcpPP.s:243    .text:0000000000000174 .L0 
     /tmp/ccJwcpPP.s:245    .text:0000000000000178 .L0 
     /tmp/ccJwcpPP.s:247    .text:000000000000017c .L0 
     /tmp/ccJwcpPP.s:257    .text:000000000000017c .L0 
     /tmp/ccJwcpPP.s:39     .text:0000000000000018 .L0 
     /tmp/ccJwcpPP.s:64     .text:0000000000000034 .L0 
     /tmp/ccJwcpPP.s:68     .text:0000000000000040 .L0 
     /tmp/ccJwcpPP.s:75     .text:0000000000000050 .L0 
     /tmp/ccJwcpPP.s:83     .text:0000000000000064 .L0 
     /tmp/ccJwcpPP.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccJwcpPP.s:89     .text:0000000000000078 .L0 
     /tmp/ccJwcpPP.s:94     .text:0000000000000088 .L0 
     /tmp/ccJwcpPP.s:120    .text:00000000000000ac .L0 
     /tmp/ccJwcpPP.s:128    .text:00000000000000c4 .L0 
     /tmp/ccJwcpPP.s:11     .rodata.str1.8:0000000000000018 .LC1
     /tmp/ccJwcpPP.s:182    .text:0000000000000104 .L0 
     /tmp/ccJwcpPP.s:14     .rodata.str1.8:0000000000000020 .LC2
     /tmp/ccJwcpPP.s:228    .text:0000000000000150 .L0 
     /tmp/ccJwcpPP.s:114    .text:00000000000000a8 .L12
     /tmp/ccJwcpPP.s:124    .text:00000000000000c0 .L13
     /tmp/ccJwcpPP.s:137    .text:00000000000000e0 .L6
     /tmp/ccJwcpPP.s:72     .text:0000000000000050 .L2
     /tmp/ccJwcpPP.s:79     .text:0000000000000060 .L3
     /tmp/ccJwcpPP.s:132    .text:00000000000000d8 .L4
     /tmp/ccJwcpPP.s:199    .text:000000000000012c .L10
     /tmp/ccJwcpPP.s:222    .text:0000000000000150 .L7
     /tmp/ccJwcpPP.s:195    .text:0000000000000128 .L8
     /tmp/ccJwcpPP.s:190    .text:000000000000011c .L9
     /tmp/ccJwcpPP.s:1826   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccJwcpPP.s:3311   .debug_str:0000000000000950 .LASF190
     /tmp/ccJwcpPP.s:3083   .debug_str:000000000000026c .LASF191
     /tmp/ccJwcpPP.s:3095   .debug_str:00000000000002b4 .LASF192
     /tmp/ccJwcpPP.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccJwcpPP.s:250    .text:000000000000017c .Letext0
     /tmp/ccJwcpPP.s:3001   .debug_line:0000000000000000 .Ldebug_line0
GAS LISTING /tmp/ccJwcpPP.s 			page 13


     /tmp/ccJwcpPP.s:3113   .debug_str:0000000000000358 .LASF0
     /tmp/ccJwcpPP.s:3141   .debug_str:0000000000000462 .LASF1
     /tmp/ccJwcpPP.s:3241   .debug_str:0000000000000770 .LASF2
     /tmp/ccJwcpPP.s:3251   .debug_str:00000000000007c6 .LASF4
     /tmp/ccJwcpPP.s:3121   .debug_str:000000000000038e .LASF3
     /tmp/ccJwcpPP.s:3013   .debug_str:000000000000002f .LASF5
     /tmp/ccJwcpPP.s:3215   .debug_str:00000000000006a8 .LASF6
     /tmp/ccJwcpPP.s:3207   .debug_str:000000000000064e .LASF7
     /tmp/ccJwcpPP.s:3131   .debug_str:000000000000040a .LASF8
     /tmp/ccJwcpPP.s:3093   .debug_str:00000000000002a4 .LASF9
     /tmp/ccJwcpPP.s:3099   .debug_str:00000000000002ee .LASF10
     /tmp/ccJwcpPP.s:3035   .debug_str:00000000000000e9 .LASF11
     /tmp/ccJwcpPP.s:3079   .debug_str:0000000000000257 .LASF12
     /tmp/ccJwcpPP.s:3043   .debug_str:000000000000013f .LASF13
     /tmp/ccJwcpPP.s:3033   .debug_str:00000000000000d9 .LASF14
     /tmp/ccJwcpPP.s:3285   .debug_str:00000000000008cb .LASF15
     /tmp/ccJwcpPP.s:3067   .debug_str:00000000000001fc .LASF16
     /tmp/ccJwcpPP.s:3271   .debug_str:0000000000000856 .LASF17
     /tmp/ccJwcpPP.s:3353   .debug_str:0000000000000b50 .LASF18
     /tmp/ccJwcpPP.s:3023   .debug_str:000000000000008d .LASF45
     /tmp/ccJwcpPP.s:3295   .debug_str:00000000000008fb .LASF193
     /tmp/ccJwcpPP.s:3287   .debug_str:00000000000008d7 .LASF19
     /tmp/ccJwcpPP.s:3137   .debug_str:0000000000000449 .LASF21
     /tmp/ccJwcpPP.s:3297   .debug_str:0000000000000903 .LASF23
     /tmp/ccJwcpPP.s:3279   .debug_str:000000000000088f .LASF25
     /tmp/ccJwcpPP.s:3025   .debug_str:0000000000000095 .LASF20
     /tmp/ccJwcpPP.s:3345   .debug_str:0000000000000afc .LASF22
     /tmp/ccJwcpPP.s:3145   .debug_str:000000000000047b .LASF24
     /tmp/ccJwcpPP.s:3031   .debug_str:00000000000000bc .LASF26
     /tmp/ccJwcpPP.s:3341   .debug_str:0000000000000ae4 .LASF27
     /tmp/ccJwcpPP.s:3299   .debug_str:000000000000090e .LASF28
     /tmp/ccJwcpPP.s:3229   .debug_str:0000000000000707 .LASF29
     /tmp/ccJwcpPP.s:3063   .debug_str:00000000000001d7 .LASF30
     /tmp/ccJwcpPP.s:3071   .debug_str:0000000000000219 .LASF31
     /tmp/ccJwcpPP.s:3209   .debug_str:0000000000000661 .LASF32
     /tmp/ccJwcpPP.s:3391   .debug_str:0000000000000c7c .LASF33
     /tmp/ccJwcpPP.s:3217   .debug_str:00000000000006af .LASF34
     /tmp/ccJwcpPP.s:3283   .debug_str:00000000000008be .LASF35
     /tmp/ccJwcpPP.s:3167   .debug_str:0000000000000510 .LASF36
     /tmp/ccJwcpPP.s:3201   .debug_str:000000000000062c .LASF194
     /tmp/ccJwcpPP.s:3265   .debug_str:0000000000000817 .LASF37
     /tmp/ccJwcpPP.s:3143   .debug_str:0000000000000475 .LASF38
     /tmp/ccJwcpPP.s:3183   .debug_str:0000000000000594 .LASF40
     /tmp/ccJwcpPP.s:3307   .debug_str:000000000000093b .LASF121
     /tmp/ccJwcpPP.s:3221   .debug_str:00000000000006ca .LASF44
     /tmp/ccJwcpPP.s:3375   .debug_str:0000000000000c0b .LASF46
     /tmp/ccJwcpPP.s:3205   .debug_str:0000000000000641 .LASF39
     /tmp/ccJwcpPP.s:3313   .debug_str:0000000000000a14 .LASF41
     /tmp/ccJwcpPP.s:3055   .debug_str:0000000000000197 .LASF42
     /tmp/ccJwcpPP.s:3049   .debug_str:0000000000000162 .LASF43
     /tmp/ccJwcpPP.s:3401   .debug_str:0000000000000cc4 .LASF47
     /tmp/ccJwcpPP.s:3397   .debug_str:0000000000000c90 .LASF48
     /tmp/ccJwcpPP.s:3007   .debug_str:0000000000000010 .LASF49
     /tmp/ccJwcpPP.s:3395   .debug_str:0000000000000c8a .LASF50
     /tmp/ccJwcpPP.s:3325   .debug_str:0000000000000a61 .LASF51
     /tmp/ccJwcpPP.s:3321   .debug_str:0000000000000a51 .LASF52
     /tmp/ccJwcpPP.s:3269   .debug_str:000000000000084d .LASF53
GAS LISTING /tmp/ccJwcpPP.s 			page 14


     /tmp/ccJwcpPP.s:3337   .debug_str:0000000000000ad2 .LASF54
     /tmp/ccJwcpPP.s:3195   .debug_str:0000000000000608 .LASF55
     /tmp/ccJwcpPP.s:3293   .debug_str:00000000000008f2 .LASF56
     /tmp/ccJwcpPP.s:3163   .debug_str:00000000000004f8 .LASF57
     /tmp/ccJwcpPP.s:3027   .debug_str:00000000000000a1 .LASF168
     /tmp/ccJwcpPP.s:3231   .debug_str:0000000000000717 .LASF170
     /tmp/ccJwcpPP.s:3047   .debug_str:0000000000000154 .LASF195
     /tmp/ccJwcpPP.s:3123   .debug_str:00000000000003a0 .LASF196
     /tmp/ccJwcpPP.s:3291   .debug_str:00000000000008e7 .LASF58
     /tmp/ccJwcpPP.s:3365   .debug_str:0000000000000ba7 .LASF59
     /tmp/ccJwcpPP.s:3019   .debug_str:0000000000000064 .LASF60
     /tmp/ccJwcpPP.s:3125   .debug_str:00000000000003cc .LASF61
     /tmp/ccJwcpPP.s:3261   .debug_str:00000000000007fb .LASF117
     /tmp/ccJwcpPP.s:3249   .debug_str:00000000000007bb .LASF62
     /tmp/ccJwcpPP.s:3381   .debug_str:0000000000000c39 .LASF63
     /tmp/ccJwcpPP.s:3383   .debug_str:0000000000000c44 .LASF64
     /tmp/ccJwcpPP.s:3301   .debug_str:0000000000000925 .LASF65
     /tmp/ccJwcpPP.s:3267   .debug_str:0000000000000843 .LASF66
     /tmp/ccJwcpPP.s:3133   .debug_str:000000000000041d .LASF67
     /tmp/ccJwcpPP.s:3065   .debug_str:00000000000001f6 .LASF68
     /tmp/ccJwcpPP.s:3091   .debug_str:0000000000000297 .LASF69
     /tmp/ccJwcpPP.s:3057   .debug_str:00000000000001a0 .LASF70
     /tmp/ccJwcpPP.s:3175   .debug_str:0000000000000553 .LASF71
     /tmp/ccJwcpPP.s:3289   .debug_str:00000000000008e0 .LASF72
     /tmp/ccJwcpPP.s:3273   .debug_str:000000000000086c .LASF73
     /tmp/ccJwcpPP.s:3105   .debug_str:0000000000000322 .LASF74
     /tmp/ccJwcpPP.s:3319   .debug_str:0000000000000a40 .LASF75
     /tmp/ccJwcpPP.s:3379   .debug_str:0000000000000c2d .LASF76
     /tmp/ccJwcpPP.s:3189   .debug_str:00000000000005c7 .LASF77
     /tmp/ccJwcpPP.s:3029   .debug_str:00000000000000af .LASF78
     /tmp/ccJwcpPP.s:3111   .debug_str:0000000000000352 .LASF79
     /tmp/ccJwcpPP.s:3077   .debug_str:0000000000000246 .LASF80
     /tmp/ccJwcpPP.s:3393   .debug_str:0000000000000c82 .LASF81
     /tmp/ccJwcpPP.s:3359   .debug_str:0000000000000b84 .LASF82
     /tmp/ccJwcpPP.s:3235   .debug_str:0000000000000749 .LASF83
     /tmp/ccJwcpPP.s:3405   .debug_str:0000000000000ce2 .LASF84
     /tmp/ccJwcpPP.s:3045   .debug_str:000000000000014f .LASF197
     /tmp/ccJwcpPP.s:3277   .debug_str:000000000000088a .LASF85
     /tmp/ccJwcpPP.s:3155   .debug_str:00000000000004ae .LASF86
     /tmp/ccJwcpPP.s:3173   .debug_str:000000000000054e .LASF87
     /tmp/ccJwcpPP.s:3347   .debug_str:0000000000000b17 .LASF88
     /tmp/ccJwcpPP.s:3075   .debug_str:000000000000022b .LASF89
     /tmp/ccJwcpPP.s:3243   .debug_str:000000000000077e .LASF198
     /tmp/ccJwcpPP.s:3101   .debug_str:00000000000002fc .LASF199
     /tmp/ccJwcpPP.s:3339   .debug_str:0000000000000ad7 .LASF90
     /tmp/ccJwcpPP.s:3017   .debug_str:0000000000000041 .LASF91
     /tmp/ccJwcpPP.s:3139   .debug_str:0000000000000459 .LASF92
     /tmp/ccJwcpPP.s:3161   .debug_str:00000000000004d7 .LASF93
     /tmp/ccJwcpPP.s:3153   .debug_str:00000000000004a6 .LASF94
     /tmp/ccJwcpPP.s:3213   .debug_str:0000000000000688 .LASF95
     /tmp/ccJwcpPP.s:3253   .debug_str:00000000000007cd .LASF96
     /tmp/ccJwcpPP.s:3191   .debug_str:00000000000005df .LASF97
     /tmp/ccJwcpPP.s:3407   .debug_str:0000000000000cf0 .LASF98
     /tmp/ccJwcpPP.s:3389   .debug_str:0000000000000c5d .LASF99
     /tmp/ccJwcpPP.s:3263   .debug_str:000000000000080c .LASF100
     /tmp/ccJwcpPP.s:3357   .debug_str:0000000000000b63 .LASF101
     /tmp/ccJwcpPP.s:3227   .debug_str:00000000000006fe .LASF102
GAS LISTING /tmp/ccJwcpPP.s 			page 15


     /tmp/ccJwcpPP.s:3039   .debug_str:000000000000010b .LASF103
     /tmp/ccJwcpPP.s:3331   .debug_str:0000000000000aaa .LASF104
     /tmp/ccJwcpPP.s:3329   .debug_str:0000000000000a7e .LASF105
     /tmp/ccJwcpPP.s:3177   .debug_str:0000000000000563 .LASF106
     /tmp/ccJwcpPP.s:3061   .debug_str:00000000000001ab .LASF107
     /tmp/ccJwcpPP.s:3335   .debug_str:0000000000000ac5 .LASF108
     /tmp/ccJwcpPP.s:3021   .debug_str:000000000000006a .LASF109
     /tmp/ccJwcpPP.s:3157   .debug_str:00000000000004b3 .LASF110
     /tmp/ccJwcpPP.s:3115   .debug_str:0000000000000365 .LASF111
     /tmp/ccJwcpPP.s:3185   .debug_str:00000000000005a8 .LASF112
     /tmp/ccJwcpPP.s:3377   .debug_str:0000000000000c28 .LASF113
     /tmp/ccJwcpPP.s:3247   .debug_str:00000000000007a0 .LASF114
     /tmp/ccJwcpPP.s:3171   .debug_str:0000000000000547 .LASF115
     /tmp/ccJwcpPP.s:3349   .debug_str:0000000000000b2e .LASF116
     /tmp/ccJwcpPP.s:3165   .debug_str:0000000000000502 .LASF118
     /tmp/ccJwcpPP.s:3317   .debug_str:0000000000000a37 .LASF119
     /tmp/ccJwcpPP.s:3159   .debug_str:00000000000004b8 .LASF120
     /tmp/ccJwcpPP.s:3129   .debug_str:0000000000000402 .LASF122
     /tmp/ccJwcpPP.s:3315   .debug_str:0000000000000a30 .LASF123
     /tmp/ccJwcpPP.s:3005   .debug_str:000000000000000a .LASF124
     /tmp/ccJwcpPP.s:3303   .debug_str:000000000000092a .LASF125
     /tmp/ccJwcpPP.s:3361   .debug_str:0000000000000b97 .LASF126
     /tmp/ccJwcpPP.s:3343   .debug_str:0000000000000aed .LASF200
     /tmp/ccJwcpPP.s:3073   .debug_str:000000000000021f .LASF127
     /tmp/ccJwcpPP.s:3309   .debug_str:0000000000000943 .LASF128
     /tmp/ccJwcpPP.s:3051   .debug_str:0000000000000179 .LASF129
     /tmp/ccJwcpPP.s:3103   .debug_str:0000000000000317 .LASF130
     /tmp/ccJwcpPP.s:3109   .debug_str:000000000000033a .LASF131
     /tmp/ccJwcpPP.s:3333   .debug_str:0000000000000abc .LASF134
     /tmp/ccJwcpPP.s:3327   .debug_str:0000000000000a69 .LASF136
     /tmp/ccJwcpPP.s:3237   .debug_str:000000000000075c .LASF132
     /tmp/ccJwcpPP.s:3197   .debug_str:0000000000000610 .LASF133
     /tmp/ccJwcpPP.s:3219   .debug_str:00000000000006c3 .LASF135
     /tmp/ccJwcpPP.s:3223   .debug_str:00000000000006d7 .LASF137
     /tmp/ccJwcpPP.s:3187   .debug_str:00000000000005c0 .LASF138
     /tmp/ccJwcpPP.s:3135   .debug_str:0000000000000436 .LASF139
     /tmp/ccJwcpPP.s:3373   .debug_str:0000000000000c03 .LASF140
     /tmp/ccJwcpPP.s:3281   .debug_str:00000000000008aa .LASF141
     /tmp/ccJwcpPP.s:3181   .debug_str:000000000000058c .LASF142
     /tmp/ccJwcpPP.s:3085   .debug_str:0000000000000279 .LASF143
     /tmp/ccJwcpPP.s:3149   .debug_str:0000000000000498 .LASF144
     /tmp/ccJwcpPP.s:3225   .debug_str:00000000000006ea .LASF145
     /tmp/ccJwcpPP.s:3403   .debug_str:0000000000000cda .LASF146
     /tmp/ccJwcpPP.s:3119   .debug_str:000000000000037a .LASF147
     /tmp/ccJwcpPP.s:3385   .debug_str:0000000000000c4a .LASF148
     /tmp/ccJwcpPP.s:3255   .debug_str:00000000000007d9 .LASF149
     /tmp/ccJwcpPP.s:3257   .debug_str:00000000000007ec .LASF150
     /tmp/ccJwcpPP.s:3037   .debug_str:00000000000000f8 .LASF151
     /tmp/ccJwcpPP.s:3059   .debug_str:00000000000001a5 .LASF152
     /tmp/ccJwcpPP.s:3107   .debug_str:0000000000000328 .LASF153
     /tmp/ccJwcpPP.s:3117   .debug_str:0000000000000374 .LASF154
     /tmp/ccJwcpPP.s:3053   .debug_str:0000000000000185 .LASF155
     /tmp/ccJwcpPP.s:3015   .debug_str:0000000000000036 .LASF156
     /tmp/ccJwcpPP.s:3245   .debug_str:0000000000000788 .LASF157
     /tmp/ccJwcpPP.s:3239   .debug_str:0000000000000765 .LASF158
     /tmp/ccJwcpPP.s:3399   .debug_str:0000000000000cac .LASF159
     /tmp/ccJwcpPP.s:3363   .debug_str:0000000000000b9d .LASF160
GAS LISTING /tmp/ccJwcpPP.s 			page 16


     /tmp/ccJwcpPP.s:3041   .debug_str:0000000000000129 .LASF161
     /tmp/ccJwcpPP.s:3355   .debug_str:0000000000000b59 .LASF162
     /tmp/ccJwcpPP.s:3169   .debug_str:0000000000000531 .LASF163
     /tmp/ccJwcpPP.s:3369   .debug_str:0000000000000be6 .LASF164
     /tmp/ccJwcpPP.s:3097   .debug_str:00000000000002d2 .LASF165
     /tmp/ccJwcpPP.s:3081   .debug_str:0000000000000266 .LASF166
     /tmp/ccJwcpPP.s:3323   .debug_str:0000000000000a5b .LASF167
     /tmp/ccJwcpPP.s:3233   .debug_str:0000000000000734 .LASF169
     /tmp/ccJwcpPP.s:3127   .debug_str:00000000000003e0 .LASF171
     /tmp/ccJwcpPP.s:3147   .debug_str:0000000000000488 .LASF172
     /tmp/ccJwcpPP.s:3089   .debug_str:0000000000000292 .LASF173
     /tmp/ccJwcpPP.s:21     .text:0000000000000000 .LFB51
     /tmp/ccJwcpPP.s:248    .text:000000000000017c .LFE51
     /tmp/ccJwcpPP.s:3259   .debug_str:00000000000007f3 .LASF174
     /tmp/ccJwcpPP.s:185    .text:0000000000000114 .LBB26
     /tmp/ccJwcpPP.s:225    .text:0000000000000150 .LBE26
     /tmp/ccJwcpPP.s:3069   .debug_str:0000000000000212 .LASF175
     /tmp/ccJwcpPP.s:2934   .debug_loc:0000000000000000 .LLST4
     /tmp/ccJwcpPP.s:3275   .debug_str:000000000000087e .LASF176
     /tmp/ccJwcpPP.s:3305   .debug_str:000000000000092f .LASF201
     /tmp/ccJwcpPP.s:2945   .debug_loc:0000000000000036 .LLST5
     /tmp/ccJwcpPP.s:3003   .debug_str:0000000000000000 .LASF177
     /tmp/ccJwcpPP.s:210    .text:000000000000013c .LBB27
     /tmp/ccJwcpPP.s:224    .text:0000000000000150 .LBE27
     /tmp/ccJwcpPP.s:2952   .debug_loc:0000000000000059 .LLST6
     /tmp/ccJwcpPP.s:219    .text:000000000000014c .LVL23
     /tmp/ccJwcpPP.s:194    .text:0000000000000128 .LVL19
     /tmp/ccJwcpPP.s:41     .text:0000000000000020 .LBB16
     /tmp/ccJwcpPP.s:53     .text:0000000000000024 .LBE16
     /tmp/ccJwcpPP.s:101    .text:000000000000009c .LBB18
     /tmp/ccJwcpPP.s:116    .text:00000000000000a8 .LBE18
     /tmp/ccJwcpPP.s:2959   .debug_loc:000000000000007c .LLST0
     /tmp/ccJwcpPP.s:143    .text:00000000000000e4 .LBB20
     /tmp/ccJwcpPP.s:151    .text:00000000000000e8 .LBE20
     /tmp/ccJwcpPP.s:2967   .debug_loc:00000000000000a0 .LLST1
     /tmp/ccJwcpPP.s:157    .text:00000000000000f0 .LBB22
     /tmp/ccJwcpPP.s:164    .text:00000000000000f4 .LBE22
     /tmp/ccJwcpPP.s:2974   .debug_loc:00000000000000c3 .LLST2
     /tmp/ccJwcpPP.s:170    .text:00000000000000fc .LBB24
     /tmp/ccJwcpPP.s:177    .text:0000000000000100 .LBE24
     /tmp/ccJwcpPP.s:2981   .debug_loc:00000000000000e6 .LLST3
     /tmp/ccJwcpPP.s:59     .text:0000000000000030 .LVL2
     /tmp/ccJwcpPP.s:86     .text:0000000000000078 .LVL3
     /tmp/ccJwcpPP.s:91     .text:0000000000000088 .LVL4
     /tmp/ccJwcpPP.s:96     .text:0000000000000098 .LVL5
     /tmp/ccJwcpPP.s:122    .text:00000000000000bc .LVL8
     /tmp/ccJwcpPP.s:130    .text:00000000000000d4 .LVL9
     /tmp/ccJwcpPP.s:136    .text:00000000000000e0 .LVL10
     /tmp/ccJwcpPP.s:184    .text:0000000000000114 .LVL17
     /tmp/ccJwcpPP.s:230    .text:0000000000000160 .LVL25
     /tmp/ccJwcpPP.s:3351   .debug_str:0000000000000b4b .LASF178
     /tmp/ccJwcpPP.s:3151   .debug_str:00000000000004a0 .LASF179
     /tmp/ccJwcpPP.s:3087   .debug_str:000000000000028d .LASF180
     /tmp/ccJwcpPP.s:3011   .debug_str:0000000000000025 .LASF181
     /tmp/ccJwcpPP.s:3203   .debug_str:0000000000000631 .LASF202
     /tmp/ccJwcpPP.s:3193   .debug_str:0000000000000601 .LASF182
     /tmp/ccJwcpPP.s:3179   .debug_str:0000000000000579 .LASF184
GAS LISTING /tmp/ccJwcpPP.s 			page 17


     /tmp/ccJwcpPP.s:3199   .debug_str:0000000000000625 .LASF183
     /tmp/ccJwcpPP.s:3009   .debug_str:0000000000000015 .LASF185
     /tmp/ccJwcpPP.s:3367   .debug_str:0000000000000bc1 .LASF186
     /tmp/ccJwcpPP.s:3371   .debug_str:0000000000000bf5 .LASF188
     /tmp/ccJwcpPP.s:3211   .debug_str:0000000000000675 .LASF187
     /tmp/ccJwcpPP.s:3387   .debug_str:0000000000000c51 .LASF189
     /tmp/ccJwcpPP.s:189    .text:000000000000011c .LVL18
     /tmp/ccJwcpPP.s:198    .text:000000000000012c .LVL20
     /tmp/ccJwcpPP.s:203    .text:0000000000000134 .LVL21
     /tmp/ccJwcpPP.s:221    .text:0000000000000150 .LVL24
     /tmp/ccJwcpPP.s:241    .text:0000000000000170 .LVL26
     /tmp/ccJwcpPP.s:209    .text:000000000000013c .LVL22
     /tmp/ccJwcpPP.s:100    .text:000000000000009c .LVL6
     /tmp/ccJwcpPP.s:113    .text:00000000000000a8 .LVL7
     /tmp/ccJwcpPP.s:142    .text:00000000000000e4 .LVL11
     /tmp/ccJwcpPP.s:149    .text:00000000000000e8 .LVL12
     /tmp/ccJwcpPP.s:156    .text:00000000000000f0 .LVL13
     /tmp/ccJwcpPP.s:162    .text:00000000000000f4 .LVL14
     /tmp/ccJwcpPP.s:169    .text:00000000000000fc .LVL15
     /tmp/ccJwcpPP.s:175    .text:0000000000000100 .LVL16
     /tmp/ccJwcpPP.s:258    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_ZN7_thread12createThreadEPFvPvE
_ZN7_thread7runningE
_ZN5Riscv5buff2E
_ZN5Riscv5buff1E
_Z11workerBodyAPv
_Z13thread_createPP7_threadPFvPvES2_
_Z11printStringPKc
_ZN7_thread12consoleWriteEPv
_ZN4_sem9createSemEPPS_m
_ZN7_thread5yieldEv
_ZdlPv
_ZdaPv
